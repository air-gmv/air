# RTEMS
prefix = /opt/rtems/$(RTEMS_API)
exec_prefix = $(prefix)/$(RTEMS_CPU)-rtems$(RTEMS_API)
RTEMS_ROOT = $(prefix)

# AIR 
#prefix = $(AIR_POS)/rtems$(RTEMS_API)
#exec_prefix = $(prefix)/rtems$(RTEMS_API)-install/$(RTEMS_CPU)-rtems$(RTEMS_API)
#RTEMS_ROOT = $(prefix)/rtems$(RTEMS_API)-install

RTEMS_SHARE = $(RTEMS_ROOT)/share/rtems$(RTEMS_API)
PROJECT_ROOT = $(RTEMS_ROOT)/$(RTEMS_CPU)-rtems$(RTEMS_API)/$(RTEMS_BSP)
PROJECT_INCLUDE = $(PROJECT_ROOT)/lib/include
PROJECT_LIB = $(PROJECT_ROOT)/lib
BUILDDIR = b-$(RTEMS_BSP)

# Where to find gtest code
GTEST_DIR = /home/taste/work/development/rtems-gtest

# Where to find user code.
USER_DIR = ..
USER_DIR_UT = .

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

LOCAL_HEADERS = $(USER_DIR)/*.h 

# House-keeping build targets.


# RTEMS
include $(RTEMS_ROOT)/make/custom/$(RTEMS_BSP).cfg
# AIR 
#include $(prefix)/rtems$(RTEMS_API)-install/make/custom/$(RTEMS_BSP).cfg

DEPFLAGS = -MT $@ -MD -MP -MF $(basename $@).d

# RTEMS
SYSFLAGS = --pipe -B$(PROJECT_LIB) -specs bsp_specs -qrtems -B../p0 -B../common
# AIR 
#SYSFLAGS = --pipe -B$(PROJECT_LIB) -B$(AIR_LIBS)/libprintf/ -B$(AIR_LIBS)/libair/ -B../p0 -B../common

WARNFLAGS = -Wall
OPTFLAGS = -O2 -g -ffunction-sections -fdata-sections -pthread -fpermissive
EXEEXT = .exe
DOWNEXT = .ralf

CPPFLAGS = -DGTEST -isystem $(GTEST_DIR)/include -I../p0 -I../common\
	   -I$(AIR_PMK)/core/include -I$(AIR_PMK)/arch/sparc/include 

CFLAGS = $(DEPFLAGS) $(SYSFLAGS) $(WARNFLAGS) $(CPU_CFLAGS) $(OPTFLAGS)
CXXFLAGS = $(DEPFLAGS) $(SYSFLAGS) $(WARNFLAGS) $(CPU_CFLAGS) $(OPTFLAGS)
ASFLAGS = $(CPU_CFLAGS)
LDFLAGS = -Wl,--gc-sections -Wl,--wrap=printf -Wl,--wrap=puts -Wl,--wrap=putchar

LINKFLAGS = $(SYSFLAGS) $(CPU_CFLAGS) $(LDFLAGS) $(WARNFLAGS) $(OPTFLAGS)
CCLINK = $(CC) $(LINKFLAGS) -Wl,-Map,$(basename $@).map
CXXLINK = $(CXX) $(LINKFLAGS) -Wl,-Map,$(basename $@).map

# AIR libraries
LD_LIBS =\
-Wl,--start-group \
$(AIR_LIBS)/libprintf/libprintf.a\
$(AIR_LIBS)/libair/libair.a\
-lrtemscpu -lrtemsbsp\
-Wl,--end-group

$(BUILDDIR)/%.o: %.c
		$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

$(BUILDDIR)/%.o: %.S
		$(CC) $(CPPFLAGS) -DASM $(CFLAGS) -c $< -o $@

$(BUILDDIR)/%.o: %.cc
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

$(BUILDDIR)/%.o: %.cpp
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

$(BUILDDIR)/%.o: %.s
		$(AS) $(ASFLAGS) $< -o $@

export PATH := $(RTEMS_ROOT)/bin:$(PATH)

export AR = $(RTEMS_CPU)-rtems$(RTEMS_API)-ar
export AS = $(RTEMS_CPU)-rtems$(RTEMS_API)-as
export CC = $(RTEMS_CPU)-rtems$(RTEMS_API)-gcc --pipe
export CXX = $(RTEMS_CPU)-rtems$(RTEMS_API)-g++
export LD = $(RTEMS_CPU)-rtems$(RTEMS_API)-ld
export NM = $(RTEMS_CPU)-rtems$(RTEMS_API)-nm
export OBJCOPY = $(RTEMS_CPU)-rtems$(RTEMS_API)-objcopy
export RANLIB = $(RTEMS_CPU)-rtems$(RTEMS_API)-ranlib
export SIZE = $(RTEMS_CPU)-rtems$(RTEMS_API)-size
export STRIP = $(RTEMS_CPU)-rtems$(RTEMS_API)-strip

APP = helloworld_ut
APP_PIECES = main_ut init_ut 
APP_OBJS = $(APP_PIECES:%=$(BUILDDIR)/%.o)
APP_DEPS = $(APP_PIECES:%=$(BUILDDIR)/%.d)

all: $(BUILDDIR) $(BUILDDIR)/$(APP)$(EXEEXT)

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
$(BUILDDIR)/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc -o $@

$(BUILDDIR)/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc -o $@

$(BUILDDIR)/gtest.a : $(BUILDDIR)/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

$(BUILDDIR)/gtest_main.a : $(BUILDDIR)/gtest-all.o $(BUILDDIR)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^



$(BUILDDIR):
		mkdir $(BUILDDIR)

# AIR: $(LD_LIBS) 
$(BUILDDIR)/$(APP)$(EXEEXT): $(APP_OBJS) $(BUILDDIR)/gtest.a  # $(BUILDDIR)/gtest_main.a #
		$(CXXLINK) -lm $^ -o $@ 

clean:
		rm -rf $(BUILDDIR)

-include $(APP_DEPS)
