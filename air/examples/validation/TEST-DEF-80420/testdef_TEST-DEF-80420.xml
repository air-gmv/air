<!-- Test description file -->
<!-- Test steps must be sequential, starting at 001 -->
<!-- Repetitions are limited to 0xFFF,i.e. 4095		-->
<!-- Major time frame [seconds]						-->
<!-- Test End partition : partition where the test
	 will end and finish - if needed, this can be 
	 adapted										-->
<TDF>
	<!-- Test Definition -->
	<test 	name="TEST-DEF-80420"
			id="80420" 
			partitions="5"
			test_end_partition="0"
			repeat="1" 
			mtf="0.3"
			ms_per_tick="10"
			type="TEST_GMV_VAL"
			personality="RTEMS5"
			apex="IMASPEX">
		<registered_traps async="" sync="0xF0" />
		<description>
						Create an unit test for the CACHE_FLUSH system call. Run the same
			code in a second non-authorized partition and check that a Health Monitor
			event is generated.
		</description>
		<requirements>
			<req name="AIR_SEP_0340" />	
			<req name="AIR_SEP_0760" />	
			<req name="AIR_SEP_0960" />	
		</requirements>
		
		<!-- Test Procedure -->
		<testprocedure repeat="1">
			<teststep id="0" partition="0" repeat="1">
				<description>
					Call FLUSH_CACHE without IMASPEX being initialized. Return Code: INVALID_MODE
				</description>
			</teststep>
			<teststep id="1" partition="0" repeat="1">
				<description>
					Init IMASPEX
				</description>
			</teststep>
			<teststep id="2" partition="0" repeat="1">
				<description>
					Call FLUSH_CACHE with an invalid Cache Type argument. Return Code: INVALID_PARAM
				</description>
			</teststep>
			<teststep id="3" partition="0" repeat="1">
				<description>
					Try to flush Both Caches. Since they are disabled at configuration level the return code shall be INVALID_MODE.
				</description>
			</teststep>
			<teststep id="4" partition="1" repeat="1">
				<description>
					Call FLUSH_CACHE for every CACHE_TYPE when cache management is not allowed at configuration level. Return Code: INVALID_CONFIG
				</description>
			</teststep>	
			<teststep id="5" partition="2" repeat="1">
				<description>
					Try to flush the instruction cache. Since instruction the cache is enabled at configuration level the return code shall be NO_ERROR.
				</description>
			</teststep>
			<teststep id="6" partition="2" repeat="1">
				<description>
					Try to flush the data cache. Since the data cache is disabled at configuration level the return code shall be INVALID_MODE.
				</description>
			</teststep>
			<teststep id="7" partition="2" repeat="1">
				<description>
					Try to flush both caches. Since the data cache is disabled at configuration level the return code shall be INVALID_MODE.
				</description>
			</teststep>
			<teststep id="8" partition="3" repeat="1">
				<description>
					Try to flush the data cache. Since data the cache is enabled at configuration level the return code shall be NO_ERROR.
				</description>
			</teststep>
			<teststep id="9" partition="3" repeat="1">
				<description>
					Try to flush the instruction cache. Since the instruction cache is disabled at configuration level the return code shall be INVALID_MODE.
				</description>
			</teststep>
			<teststep id="10" partition="3" repeat="1">
				<description>
					Try to flush both caches. Since the instruction cache is disabled at configuration level the return code shall be INVALID_MODE.
				</description>
			</teststep>
			<teststep id="11" partition="4" repeat="1">
				<description>
					Try to flush Both Caches. Action Shall Succeed with NO_ERROR.
				</description>
			</teststep>
		</testprocedure>		
	</test>	<!-- Test id="80420" -->
</TDF>