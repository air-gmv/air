<!-- Test description file -->
<!-- Test steps must be sequential, starting at 001 -->
<!-- Repetitions are limited to 0xFFF,i.e. 4095		-->
<!-- Major time frame [seconds]						-->
<!-- Test End partition : partition where the test
	 will end and finish - if needed, this can be 
	 adapted										-->
<TDF>
	<!-- Test Definition -->
	<test 	name="TEST-DEF-01371"
			id="1371" 
			partitions="4"
			test_end_partition="0"
			repeat="1" 
			mtf="1"
			ms_per_tick="10"
			type="TEST_GMV_VAL"
			personality="RTEMS5"
			apex="IMASPEX">
		<registered_traps async="" sync="0xF0 0x04" />
		<description>
						Define two schedules: 0) P0, P1, P2 1) P1, P3, P2. Modify
			TEST-DEF-80380 in order to determine that the Module Schedule operation has no
			impact in the floating point permissions of the relevant partitions. Verify the 
			Floating point context remains across module changes.
		</description>
		<requirements>
			<req name="AIR_SEP_0140" />	
		</requirements>
		
		<!-- Test Procedure -->
		<testprocedure repeat="1">
			<teststep id="0" partition="0" repeat="1">
				<description>
					Call pmk_sparc_enable_FP and check that no health monitor event was generated.
				</description>
			</teststep>
			<teststep id="1" partition="0" repeat="1">
				<description>
					Perform a cumulative floating point operation and check that no health monitor event was generated. Wait for next MTF.
				</description>
			</teststep>
			<teststep id="2" partition="1" repeat="1">
				<description>
					Call pmk_sparc_enable_FP and check that a PMK_VIOL_ERR is captured by the health monitoring. Wait for next MTF.
				</description>
			</teststep>
			<teststep id="3" partition="2" repeat="1">
				<description>
					Perform a cumulative floating point operation and check that no health monitor event was generated.
				</description>
			</teststep>
			<teststep id="4" partition="2" repeat="1">
				<description>
					Change to the second module schedule. Wait for next MTF.
				</description>
			</teststep>
			<teststep id="5" partition="1" repeat="1">
				<description>
					Call pmk_sparc_enable_FP and check that a PMK_VIOL_ERR is captured by the health monitoring. Wait for next MTF.
				</description>
			</teststep>	
			<teststep id="6" partition="3" repeat="1">
				<description>
					Perform a floating point operation and check that no health monitor event was generated.
				</description>
			</teststep>
			<teststep id="7" partition="2" repeat="1">
				<description>
					Perform a cumulative floating point operation and check that no health monitor event was generated.
				</description>
			</teststep>
			<teststep id="8" partition="2" repeat="1">
				<description>
					Change to the original module schedule. Wait for next MTF.
				</description>
			</teststep>
			<teststep id="9" partition="0" repeat="1">
				<description>
					Perform a cumulative floating point operation and check that no health monitor event was generated.
				</description>
			</teststep>
			<teststep id="10" partition="1" repeat="1">
				<description>
					Perform a floating point operation and check that a PMK_FLOAT_ERR is captured by the health monitoring.
				</description>
			</teststep>
			<teststep id="11" partition="2" repeat="1">
				<description>
					Perform a cumulative floating point operation and check that no health monitor event was generated.
				</description>
			</teststep>
		</testprocedure>		
	</test>	<!-- Test id="1371" -->
</TDF>