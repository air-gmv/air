/* ============================================================================
 *  Copyright (C) GMVIS Skysoft S.A., 2018
 * ============================================================================
 *  This file is part of the AIR - ARINC 653 Interface in RTEMS - Operating
 *  system.
 *  The license and distribution terms for this file may be found in the file
 *  LICENSE in this distribution or at http://www.rtems.com/license/LICENSE.
 * ==========================================================================*/
/**
 * @file
 * @author lumm
 * @brief SVC handler
 *
 * saves return status and global registers in system stack and branches
 *  to svc routine
 *
 * TODO r4 might not have the 4th passed parameter
 */

#ifndef ASM
#define ASM
#endif

#include <asm.h>
#include <asm_offsets.h>
#include <armv7.h>
#include <air.h>

    .extern arm_svc_handler

    .arm
global(exception_svc)
    srsfd   sp!, #ARM_PSR_SYS
    cpsid   aif, #ARM_PSR_SYS

    push    {r0-r4, lr}

    ldr     r0, [sp, #24]           // pref ret addr (lr)
    ldr     r1, [sp, #28]           // spsr

    tst     r1, #ARM_PSR_T
    ldrneh  r0, [r0, #-2]
    bicne   r0, r0, #0xff00
    ldreq   r0, [r0, #-4]
    biceq   r0, r0, #0xff000000

    /* if return from trap, just exit peacefully, all is already taken care of */
    cmp     r0, #(AIR_SYSCALL_ARM_RETT)
    beq     arm_rett

    mrc     p15, 0, r1, c13, c0, 4  // get Per_CPU core
    mov     r2, sp                  // arm_supervisor_stack_frame_t

    BL2C    arm_svc_handler

    pop     {r0-r4, lr}
    rfefd   sp!


arm_rett:
    BL2C    arm_syscall_rett

    add     sp, #32
    cpsid   aif, #ARM_PSR_SYS
    rfefd   sp!
