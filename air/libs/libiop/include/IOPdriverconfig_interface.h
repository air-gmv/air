/** 
 * 	@file IOPdriverconfig_interface.h
 * 
 *  COPYRIGHT (c) 2011.
 *  GMV-SKYSOFT 
 *
 * 	@author Clï¿½udio Silva
 * 
 *  The license and distribution terms for this file may be 
 *  found in the file LICENSE at: 
 *  http://www.rtems.com/license/LICENSE.
 * 
 * 	@brief Contains driver configuration options
 * 
 * 	Contains configuration options needed by the several drivers.
 *	Declares the "getter" functions for those configurations.
 *	To be auto generated by a configuration tool
 */ 

#ifndef _USERCONFIG_H
#define _USERCONFIG_H

#include <IOPlibio.h>

#ifdef	__SPW_H__
#include <IOPgrspw.h>

/**
 * @brief gets SpW internal driver structure 
 * @return pointer to SpW internal per core driver structure
 */
SPW_DEV *get_spw_devs();

/**
 * @brief gets number of SpW v1 cores
 * @return number of SpW v1 cores
 */
int get_number_spw_cores();

/**
 * @brief gets number of SpW v2 cores
 * @return number of SpW v2 cores
 */
int get_number_spw2_cores();

/**
 * @brief gets SpW user configuration
 * @return pointer to SpW configuration structure#spw_user_config
 */
spw_user_config * get_spw_config();

/**
 * @brief gets SpW default configuration
 * @return pointer to SpW configuration structure #spw_user_config
 */
spw_user_config * get_spw_defconfig();

/**
 * @brief gets poiter to SpW memory are
 * @return pointer to the beggining of the SpW allocated memory area
 */
void * get_spw_mem();

/**
 * @brief gets pointer to SpW memory area
 * @return pointer to the end of the SpW allocated memory area
 */
void * get_spw_memend();

/**
 * @brief gets the size of SpW allocated memory
 * @return SpW alocated memory size
 */
int get_spw_memsize();

#endif

#ifdef __MIL1553BRM_H__
#include <IOPmil1553brm.h>

/**
 * @brief gets BRM internal driver structure 
 * @return pointer to BRM internal per core driver structure
 */
brm_priv *get_milstd_brm_priv();

/**
 * @brief gets number of milstd cores
 * @return number of milstd cores
 */
int get_number_milstd_cores();

/**
 * @brief gets pointer to BRM memory are
 * @return pointer to the beggining of the BRM allocated memory area
 */
void * get_milstd_mem();

/**
 * @brief gets pointer to BRM memory area
 * @return pointer to the end of the BRM allocated memory area
 */
void * get_milstd_memend();

/**
 * @brief gets BRM user configuration
 * @return pointer to BRM configuration structure #milstd_config_t
 */
milstd_config_t * get_milstd_config();

/**
 * @brief get pointer to command list
 * @return pointer to user command list
 */
bc_command_t *iop_milstd_get_command_list();

/**
 * @brief get the number of commands in the list
 * @return number of commands in list
 */
int iop_milstd_get_command_list_size();

#endif

#ifdef __GR1553B_H__
#include <IOPgr1553b.h>

/**
 * @brief Get pointer to beginning of internal memory device
 * @return Pointer to internal memory device
 */
grb_priv *iop_grb_get_priv_mem(void);

/**
 * @brief Get user configurations
 * @return Pointer to user configurations structure
 */
grb_user_config_t *iop_grb_get_user_config(unsigned int minor);

/**
 * @brief Get number of devices
 * @return Number of devices
 */
int iop_get_number_grb_cores(void);

/**
 * @brief Get pointer of allocated memory
 * @return Pointer to beginning of allocated memory
 */
void *iop_get_grb_mem(void);

/**
 * @brief Get pointer of allocated physical/virtual addresses data stored for GR1553BC
 * @return Pointer to allocated memory of physical/virtual addresses storage
 */
gr1553hwaddr *iop_get_gr1553hwlist();

/**
 * @brief get pointer to command list
 * @return Pointer to beginning of user command list
 */
bc_command_t *iop_milstd_get_command_list();

/**
 * @brief Get the number of commands in user list
 * @return Number of commands in list
 */
int iop_milstd_get_command_list_size();

/**
 * @brief Get the number of commands in secondary transfer list
 * @return Number of commands in asynchronous list
 */
int iop_milstd_get_async_command_list_size();

/**
 * @brief get size data buffers
 * @return size of data buffers
 */
int iop_milstd_get_data_buffers_size();



#endif

#endif
